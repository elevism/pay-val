name: CI

on:

  ## when a release is published (not drafts)
  release:
    types: [published]

  ## on all pull requests (create, update, synchronize)
  pull_request:

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:

  ## validate and build
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        node-version: ['lts/*', 'latest']

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version}}
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn run lint

      - name: Test
        run: yarn run test

      - name: Archive code coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
          retention-days: 7

      - name: Check Dependencies
        run: yarn run check-deps

      - name: Build
        run: yarn run raw-build

  ## deploy new version
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run raw-build

      - name: Deploy
        run: npm publish --loglevel silly
